quarkus.http.port=8080
quarkus.http.host=0.0.0.0

# quarkus.kafka.bootstrap-servers=localhost:9092

# quarkus.mongodb.connection-string=mongodb://localhost:27017/

# MongoDB configuration
quarkus.mongodb.connection-string=mongodb+srv://devteam:Zagateam2023*@applicationcluster.tvbngn1.mongodb.net/test

# Trace Configuration
mp.messaging.incoming.trace-in.bootstrap.servers=dev-persistent-cluster-kafka-external-bootstrap-kafka-workspace.apps.zagaopenshift.zagaopensource.com:443
mp.messaging.incoming.trace-in.connector=smallrye-kafka
mp.messaging.incoming.trace-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.trace-in.value.deserializer=com.zaga.kafka.consumer.TraceDeserialization
mp.messaging.incoming.trace-in.topic=all-traces-1
mp.messaging.incoming.trace-in.auto.offset.reset=latest

# SSL
mp.messaging.incoming.trace-in.security.protocol=SSL
mp.messaging.incoming.trace-in.ssl.truststore.location=./truststore.jks
mp.messaging.incoming.trace-in.ssl.truststore.password=password

# Log configuration
mp.messaging.incoming.logs-in.bootstrap.servers=dev-persistent-cluster-kafka-external-bootstrap-kafka-workspace.apps.zagaopenshift.zagaopensource.com:443
mp.messaging.incoming.logs-in.connector=smallrye-kafka
mp.messaging.incoming.logs-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.logs-in.value.deserializer=com.zaga.kafka.consumer.LogDeserialization
mp.messaging.incoming.logs-in.topic=all-logs-1
mp.messaging.incoming.logs-in.auto.offset.reset=latest

# SSL
mp.messaging.incoming.logs-in.security.protocol=SSL
mp.messaging.incoming.logs-in.ssl.truststore.location=./truststore.jks
mp.messaging.incoming.logs-in.ssl.truststore.password=password


# Metric configuration
mp.messaging.incoming.metric-in.bootstrap.servers=dev-persistent-cluster-kafka-external-bootstrap-kafka-workspace.apps.zagaopenshift.zagaopensource.com:443
mp.messaging.incoming.metric-in.connector=smallrye-kafka
mp.messaging.incoming.metric-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.metric-in.value.deserializer=com.zaga.kafka.consumer.MetricDeserialization
mp.messaging.incoming.metric-in.topic=all-metrics-1
mp.messaging.incoming.metric-in.auto.offset.reset=latest

# SSL
mp.messaging.incoming.metric-in.security.protocol=SSL
mp.messaging.incoming.metric-in.ssl.truststore.location=./truststore.jks
mp.messaging.incoming.metric-in.ssl.truststore.password=password


# Quarkus CORS headers
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=Content-Type